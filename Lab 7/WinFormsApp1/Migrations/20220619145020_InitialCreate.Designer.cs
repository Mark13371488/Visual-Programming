// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WinFormsApp1;

#nullable disable

namespace WinFormsApp1.Migrations
{
    [DbContext(typeof(ConferentionContext))]
    [Migration("20220619145020_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EquipmentPerformance", b =>
                {
                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("PerformanceId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId", "PerformanceId");

                    b.HasIndex("PerformanceId");

                    b.ToTable("EquipmentPerformance");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"), 1L, 1);

                    b.Property<string>("BuildingName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BuildingId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Conferention", b =>
                {
                    b.Property<int>("ConferentionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConferentionId"), 1L, 1);

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ConferentionId");

                    b.HasIndex("BuildingId")
                        .IsUnique();

                    b.ToTable("Conferentions");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EquipmentId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Performance", b =>
                {
                    b.Property<int>("PerformanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerformanceId"), 1L, 1);

                    b.Property<int>("Durability")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("PerformancerId")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartOfPerformance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Theme")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerformanceId");

                    b.HasIndex("PerformancerId");

                    b.HasIndex("SectionId");

                    b.ToTable("Performances");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Performancer", b =>
                {
                    b.Property<int>("PerformancerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerformancerId"), 1L, 1);

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProBiography")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScienceDegree")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Workplace")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerformancerId");

                    b.ToTable("Performancers");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomId"), 1L, 1);

                    b.Property<int>("BuildingId")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.HasKey("RoomId");

                    b.HasIndex("BuildingId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"), 1L, 1);

                    b.Property<int>("ConferentionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfHead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.HasKey("SectionId");

                    b.HasIndex("ConferentionId");

                    b.HasIndex("RoomId")
                        .IsUnique()
                        .HasFilter("[RoomId] IS NOT NULL");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("EquipmentPerformance", b =>
                {
                    b.HasOne("WinFormsApp1.Models.Equipment", null)
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsApp1.Models.Performance", null)
                        .WithMany()
                        .HasForeignKey("PerformanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WinFormsApp1.Models.Conferention", b =>
                {
                    b.HasOne("WinFormsApp1.Models.Building", "Building")
                        .WithOne("Conferention")
                        .HasForeignKey("WinFormsApp1.Models.Conferention", "BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Performance", b =>
                {
                    b.HasOne("WinFormsApp1.Models.Performancer", "Performancer")
                        .WithMany("Performances")
                        .HasForeignKey("PerformancerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsApp1.Models.Section", "Section")
                        .WithMany("Performances")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Performancer");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Room", b =>
                {
                    b.HasOne("WinFormsApp1.Models.Building", "Building")
                        .WithMany("Rooms")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Building");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Section", b =>
                {
                    b.HasOne("WinFormsApp1.Models.Conferention", "Conferention")
                        .WithMany("Sections")
                        .HasForeignKey("ConferentionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WinFormsApp1.Models.Room", "Room")
                        .WithOne("Section")
                        .HasForeignKey("WinFormsApp1.Models.Section", "RoomId");

                    b.Navigation("Conferention");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Building", b =>
                {
                    b.Navigation("Conferention");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Conferention", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Performancer", b =>
                {
                    b.Navigation("Performances");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Room", b =>
                {
                    b.Navigation("Section");
                });

            modelBuilder.Entity("WinFormsApp1.Models.Section", b =>
                {
                    b.Navigation("Performances");
                });
#pragma warning restore 612, 618
        }
    }
}
